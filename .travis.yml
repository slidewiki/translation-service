language: node_js
node_js: 6
sudo: required
git:
  depth: 5
branches:
  only:
  - "/^(?i:SWIK)-.*$/"
  - master
cache:
  directories:
  - "./application/node_modules"
before_install:
- if [ "$TRAVIS_BRANCH" == "master" ] && [ "$TRAVIS_PULL_REQUEST" = "false" ] ; then
  ./travis_scripts/install_compose.sh ; fi
- cd application
before_script:
- npm run start:mongodb
script:
- sleep 15
- npm run lint
- npm run test:unit
- npm run test:integration
after_success:
- cd ..
- openssl aes-256-cbc -K $encrypted_63eeb36ac281_key -iv $encrypted_63eeb36ac281_iv
  -in deployment_keys.tar.enc -out deployment_keys.tar -d
- if [ "$TRAVIS_BRANCH" == "master" ] && [ "$TRAVIS_PULL_REQUEST" = "false" ] ; then
  ./travis_scripts/dockerhub.sh ; fi
- if [ "$TRAVIS_BRANCH" == "master" ] && [ "$TRAVIS_PULL_REQUEST" = "false" ] ; then
  ./travis_scripts/deploy.sh ; fi
- cd application
after_script:
- npm run coverall
- npm run stop:mongodb
- rm -f deployment_keys.tar
- rm -f ~/.docker/{cert.pem,key.pem,ca.pem,config.json}
services:
- docker
notifications:
  slack:
    on_success: change
    on_failure: always
    rooms:
      secure: y7n3UlV+PXrcJsHZ8ht6K/cLpitZJaPHq2xdiw2/XdEpDg8COmoOHLyLoX6LWHWniNf64tnbql3GuUFGqtOrFkqRCjNhsasik72UMnzREHblDG2UE+8V7q2o2ptbtzowmJ4GS4Oe8FmMoapuIXthTdDjbHbJXRp58IAKvjBrNUYqCy2FkVBfjOL0d564bMxJBMY0Q0Zp1gP80lLr28z972Sob7FOrZ3eHt426XpbyD4+1ncwKc8qIfI/UuBRH3y7Esa7U3DPTJ/fwOTzG1PqgW5kpwcLghJyUY2xgnlIUG/30NhZKh8OnOrq/wTqtD7mMTIydwzK0EICQlKQFuRG+hacupCs1uj1qIEbKnSy6X7nylOS6GekMiy8HxkkeFYFBSVn6RJ+7Z86C73LbE/Wj6+Oel4aEJFDbVE7re9OaOhUnJTgotoDeOPE3dxDMgnX+XGMMWkrO3LFMVJngYpcYJ43jvZNaPEoBLBFkbyBEI1ndKzr6uMbuOuIf57LWH03b5mYF5l0xw9JVEXQPtjrKtrPgUaMCrvcX3/cjgmFLM91CADT74w3E6tBv34Fy18iunjxUS6po3RIA2mnFoel/VAtl8u/XfwM2R6EFsp29h2t1JGvVeSYCr5c5WkjBKNep9DoiWfBhaPcQG5NDl1vzWdMwtM5coxJxNO7Gh73BPA=
env:
  global:
  - DOCKER_COMPOSE_VERSION=1.6.2
  - DATABASE_PORT=27018
  - secure: NJx0RLIAT1fX2C5RZi+9ZVfmtnKsibBteLmHegwGWaxP5CDJGXbxm3dnbsPMKG8Pc5dXv175GgKy6Jh/gVnLb0yKMSq0HyU8bfPnGmKPTwWacMAp/cqXXxNg4lm866pyAjwOmfeJll02HVLpRknOpQgveWHLgYkDbm0A5L5L6yroeCkWyQZQBYXyHur0myACIx6FnekFMeVDrWmBsWiKSclaVnVRryNeAPVHq92PoWGsRfMtQZmvwVCvbllrgQfAEeQ/ZFTBGUNuduBeGCQ+T8kt3Mx3xyvbKv8FTr+9U3Qmx8h2SiJvF5xwMc0o+UBlbIHibanpfanfyade4SajVMxfdJ49e3KlatgBtfcgvAydzG9QuNUtdS9xi0CZiN/laZOpoK1lwF7mrhjDBaRqAMIUIH7OdkVgz2/5TBTUTN1p17f3NonbmK9AOSgqzT3J4A19fVYiZzAIuojymdwPBjjZA3gEHQmQo/05r3DA0Y0mamt2xpLox0Rj+p4cwjEqiPHsjZzEhZLWWM1z+D9hP8sDFYXCv1RdwE82NMJLdwjas1AaCIVtZn2fIf+4KWD+mZK+hKPc8b4jo/6XxIffJrTQTweq8uMxhQpkPjd2+V5e1+2GvcTm0PKtoFa6VDMNhA+ZHnCM1M8taN/eUChQJ3o09hEE4B16FEld7cHjh5o=
  - secure: Ww4aCid2/qDXjB6bVJ1O/x69d1ITm7q05eiylTm6IMu8NnoKWU6AjrNDkkxa4I8uFby+ZwHAIyAZIiX0CWVSekFY+Lfkj6JT8q3R+iP4766mqA1w3TBmRSz1s9aCkuYTXd2MUIHRCKtx4Y2Tvh02RUGWw1dQo3INqyl5hvJSDIG9pU7df7K+qa2YMLk+HrtB9/uLcFb1CEg6nw2zWpXWTW6H9RRmbdpbur9MrOaDgLy2Hgh789jcG9Zcf4jBcjnjZveCVqnAB+ILakvQbPNq8WYu8jMccVfESNsDWwCSA/MYZGM+yYWwOszhYQyJpRZiw/fTUVfWfUyhvefFOVFHwWLPfens0HJoiiY6ksjoY+HR6moJ42UyC/kT3Ml83gy+OTEpA7nIw3kd1qZRsCh3uHgTpFogQLQOBZ+JjnwwhCa13tko1Qjb3gTpQLpWtpF5AF9Hm7RPsqOQUuNArE/56CxADy84oM6z5Wy5B59ZYKfzyJi6eHhVoo2+yJXV984cfG+oGWOc8t7xqJ4hPrKIpRqCBCFT3abuo/i9hdQmzNoLlaK2ZCkR9vq86ZytHo39KqbEso8SBNf+AdnZTnfW73on8vKQEL70/3kzTGl619VHkdKQxpJjHDG/I228LbyIHHnPb1B7nxCN+E6q+kNgcVaXtczCRj2SAQqVCF6fRwY=
  - secure: riUA0h4tjksw1pKBc/RBTbJggIsulP5chUU89VILLS54U3M7OJzr+DXiOFkhMHSzfq/B9Fde0xFnZxetk4pOwrM+ksGIVaVBkwFUAQ8rMlEbPcYe0cJV6y/7xn06vhlQHGwuO8iWA+RQK6r46TC6gJjxQCnoubcC9MFfDIf1AKVqGeOUUaJ45hu1Ppl4tG60KjAmnN5OzcZZgTubM5vkX+yeHFS8z5f8o0WCA4gm1m3FgTzyKlx0b6olX7F7hs38J70UmjjMTOuRoJvxsPXqzOTTGfdbXNhCIA8fq7kHEtyffuf96f7f+KXNDtlnssmCWmqbKZdD4Jre0p2Nnhoupj2ZX0D95eEFLr5K/2tfLcpZ4ZHjYD8/avLP1XcPG46vVmx2CacmACPJVm+mDkozS/KyM+Jbtq9Lq1TWbvcEpmKv0Sh7EHNfiaKoUozhBN5Gr9m45sHHC8Fg8UgJLjwthuIF6IXI21eTApWNQbHxz8Zv6fiVBSDaTbfYBl4d7d6v2PnzQUtjTiwAppGF5kcxx0a6LQzlNhtN5ePKwMsXLu89Bgnul7n56dKNGxJb5v0ko+EJMVuJg2NOuckIgBT6og8RT7kohnqbo1Oafxiz+uZXN+FxWFXrxLtoiS4hO+oqZgV/wX12GYnboRXguE6822QaB06Ua6Ck2bU0n68TSXo=
