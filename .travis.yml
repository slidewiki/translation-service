language: node_js
node_js: 6
sudo: required
git:
  depth: 5
branches:
  only:
  - "/^(?i:SWIK)-.*$/"
  - master
cache:
  directories:
  - "./application/node_modules"
before_install:
- if [ "$TRAVIS_BRANCH" == "master" ] && [ "$TRAVIS_PULL_REQUEST" = "false" ] ; then
  ./travis_scripts/install_compose.sh ; fi
- cd application
before_script:
- npm run start:mongodb
script:
- sleep 15
#- npm run lint
#- npm run test:unit
#- npm run test:integration
after_success:
- cd ..
- openssl aes-256-cbc -K $encrypted_63eeb36ac281_key -iv $encrypted_63eeb36ac281_iv
  -in deployment_keys.tar.enc -out deployment_keys.tar -d
- if [ "$TRAVIS_BRANCH" == "master" ] && [ "$TRAVIS_PULL_REQUEST" = "false" ] ; then
  ./travis_scripts/dockerhub.sh ; fi
- if [ "$TRAVIS_BRANCH" == "master" ] && [ "$TRAVIS_PULL_REQUEST" = "false" ] ; then
  ./travis_scripts/deploy.sh ; fi
- cd application
after_script:
- npm run coverall
- npm run stop:mongodb
- rm -f deployment_keys.tar
- rm -f ~/.docker/{cert.pem,key.pem,ca.pem,config.json}
services:
- docker
notifications:
  slack:
    on_success: change
    on_failure: always
    rooms:
      secure: y7n3UlV+PXrcJsHZ8ht6K/cLpitZJaPHq2xdiw2/XdEpDg8COmoOHLyLoX6LWHWniNf64tnbql3GuUFGqtOrFkqRCjNhsasik72UMnzREHblDG2UE+8V7q2o2ptbtzowmJ4GS4Oe8FmMoapuIXthTdDjbHbJXRp58IAKvjBrNUYqCy2FkVBfjOL0d564bMxJBMY0Q0Zp1gP80lLr28z972Sob7FOrZ3eHt426XpbyD4+1ncwKc8qIfI/UuBRH3y7Esa7U3DPTJ/fwOTzG1PqgW5kpwcLghJyUY2xgnlIUG/30NhZKh8OnOrq/wTqtD7mMTIydwzK0EICQlKQFuRG+hacupCs1uj1qIEbKnSy6X7nylOS6GekMiy8HxkkeFYFBSVn6RJ+7Z86C73LbE/Wj6+Oel4aEJFDbVE7re9OaOhUnJTgotoDeOPE3dxDMgnX+XGMMWkrO3LFMVJngYpcYJ43jvZNaPEoBLBFkbyBEI1ndKzr6uMbuOuIf57LWH03b5mYF5l0xw9JVEXQPtjrKtrPgUaMCrvcX3/cjgmFLM91CADT74w3E6tBv34Fy18iunjxUS6po3RIA2mnFoel/VAtl8u/XfwM2R6EFsp29h2t1JGvVeSYCr5c5WkjBKNep9DoiWfBhaPcQG5NDl1vzWdMwtM5coxJxNO7Gh73BPA=
env:
  global:
  - DOCKER_COMPOSE_VERSION=1.6.2
  - DATABASE_PORT=27018
  - secure: vKzNhCND9M/nU8CHC/zgyWS6xBg1y7KoZjWlIpPfzcg7Sf9JBRHm2C9Tq85ktDH71MBu0yFYKPZEawhpqktTneXEVXjfUzzIN3UQ4WCZ4J8rjRZy1R5r/FuzDY3crFIc0JfFPVUV/vOG/XQyBpUYnDXf5IbLFNMmMSWHgSf3jjW+nQ/hX0HN0jMj9wN3k+4kAoK45tsvxbTdCXbXzgesgQxv206zC+KV0CxZVThEM4T5jVcSLgqR3Esw4VRS3Rzlz48lh8Ce10L+y7XtEkuO8MlPXaYXYWn5FqJB1cMV8n4vE0z6wjKwFYLmhe2m5DGobvSGmWFFaWyw1Ajqik5Swi+jG1sED2uZKqcUYZxhgD+YhVSD5uRX0EwSoy6zuOnBHgzdY3TFWRBqMXvFdMWQ25776G7TUE1jaK7Ey97di6/VIae+EsUJtwmbOh8U/FCS+WXeuvH0+OKEjr9UrhTi/6f8tLv1+tJjbQLSL48ritDMwaMg7EStt0G/UrAmFGasr6BTcNxJ0Vq5naWYf3ibrto2ykjIAUtShiNnKQZCSLx8QnB2Cc7W7HdbRxKFEUbVeSTJNlOZi2czEzlF0gXosSBPvRFq0UVSVHB4J9nXGigDwkBP4n/IFqLguwYnnoJWFk16ovZK94hGo/WIQb+fBgaO+xsLv1/24e1Qp2F500g=
  - secure: c2OF5YOJlha6Sjni7vqaH5Nairgt3FsGbUnhQ2gm3fw6EI6mqbOyS2FB2gTUCQpgpr6brpjfTaBJ9gVyiJS1ORlHLllQIeWohkWVh/Qa53BdF5RNwkf8AD2k5wuhDLTd1Bx3TaD2k/LlGIuRenXk7ZUxwP7Y09KkcMld4P55cTeLRuQd8ki0UzaqLDd4KCzXbadngrT73Lzu/p1wK+peK63sqlRPNFhx1HrhOd5+/7JL+y3aHZrKNHr6+qXcBnWCbIYtFZZekCRIyWNXgugiXbQVBwrxNmmZ/7z+K74FKK76Rw+7Seyi0n+b4E8lCmF/OaKiyAcHmTkOF2WFqbEvVKbrhCUpOFoYLE7DWc2jmOEqSCijIAH97lcyCl72INIn6537HYtlTd5rlLmjtpjg+pGOqtVaylBLR81uOmNo9I+XByrzaCo3RVwZ0Os+nJSzle0Zk+fEj51WnxeHUGHlXhcMJxP3DcvRLjv678CzSVuG1B7aFywu1fyNZvNt2k6AST7dcm731GkIBrEYLiwEMz9F5Z7zp9moNMkYx9I3xI/h+as2j6s1Q9cPPZo0nFpX8nQ1LWqur9dUCy8InB3ykFoGdnFoWiYmchHrGoZIr6Kd7haeSG7ZhF3bQElbWmwKlv5A4ilXhh9VfnngjTMYjpPpwATdnUk6/WWLThLr7ko=
  - secure: llFmpGwQbDmuo7iPPWK3zvU4p9ZiTZALDV4ufMw4X/R8FiM7O8Lhv0R3onjXhwU19LnHf8/KsBpB7SopTpd4JrdFnjfcUwlLlg79N4JShdz+dLxbCQyMOLaDH2D4QYhHGJRuonB0STt7U729KvmFHWPQTqIBZ1ShOtoKBpIVbRxFPcJ/CzRiWayhVKIEHIRw2lwKVlbAWFt3JxHoW8rOm13fmNnKmPhCKjiwLVJPhsMxNZgLmYPLNNUXap7AF47pMyF7XVeDalvNaESTD9QayT5ewiwCBYJ4PLwA0Niu9f9m3CKBlB7sN4HECscs/9d4bWx5no+xJhKQR45+gzS1OgsiP6afX2YHq8J3rcGRt2TkDOgPSOIPsESa8F2+NAgDozz0VKrN21seFrIh9cFHWZkUfJm1O9dmqG52iQHxNZf//P6Boq4LAoLyz0DS25gcl84zrM44Wc1c19DKRZObtWXllXnxBUJHo5WQIPpdkg6FD/JyFxWe4hhjgWKePj5k44nUDj0Ri94YcMSa7KIJlELETBQMilRHZO+sljtusLaWDkSKKBV7hH52JuBR9dl3DK+Q2u5WEBQAEUnf9HcXAiuxlT/+PIF4JM5Cs5n60WWxHIahpfnGl+WRNUu0xnz0mh8sMJ2EGAe5e64l7vontFX6+N7aH7n2XypLWpZwDKk=
